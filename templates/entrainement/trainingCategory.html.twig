{% extends 'base.html.twig' %}

{% block title %}Entrainement {{ cards.0.category.titre }}{% endblock %}
{% block stylesheets %}
  <link rel="stylesheet" type="text/css" href="{{ asset('assets/css/login.css') }}">
  <link rel="stylesheet" type="text/css" href="{{ asset('assets/css/training.css') }}">
{% endblock %}

{% block body %}

  <div class="container text-center center-block mt-3">
    {% for card in cards %}
      <div class="{{ card.id }}{% if loop.index != 1 %} d-none{% endif %}">
        <div class="scene scene--card" id="{{ card.id }}" style="{% if card.type == 1 %}width: 300px;{% endif %}">
          <div class="card">
            <div class="card__face card__face--front">
              {% if card.type == 1 %}
                {{ card.front }}
              {% else %}
                <img class="fit-picture"
                     src="{{ card.front }}">
              {% endif %}
            </div>
            <div class="card__face card__face--back">
              {{ card.back }}
            </div>
          </div>
        </div>
        <div>
          <a href="{{ path('app_card_success', {'id': card.id}) }}" class="btn btn-success" data-id="{{ card.id }}">
            Réussi
          </a>
          <a href="{{ path('app_card_error', {'id': card.id}) }}" class="btn btn-danger" data-id="{{ card.id }}">
            Échoué
          </a>
        </div>
      </div>
    {% endfor %}
    <div class="end-round d-none pt-5">
      <div class="col-12 text-center center-block mb-3">
        <a href="{{ path('app_entrainement_category', {id: cards.0.category.id}) }}" class="btn btn-end-training mr-5">Se réentrainer</a>
        <a href="{{ path('app_entrainement') }}" class="btn btn-training-full ml-5">Retour au catégories</a>
      </div>
    </div>
  </div>
{% endblock %}
{% block javascripts %}
  {{ parent() }}
  <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
  <script>
      const values = [];
      {% for card in cards %}
      {% if card.type == 2 %}
      getMeta(
          "{{ card.front }}",
          (width, height) => {
              document.getElementById('{{ card.id }}').style.width = width / height * 260 + 'px';
          }
      );
      {% endif %}
      values.push({{ card.id }})
      {% endfor %}

      function getMeta(url, callback) {
          const img = new Image();
          img.src = url;
          img.onload = function () {
              callback(this.width, this.height);
          }
      }
  </script>
  <script>
      var cards = document.querySelectorAll('.card');

      [...cards].forEach((card) => {
          card.addEventListener('click', function () {
              card.classList.toggle('is-flipped');
          });
      });

      function successCard(event) {
          event.preventDefault();
          let id = this.dataset.id;
          let url = this.href;
          let card = this.parentElement.parentElement;
          axios.get(url).then(function (response) {
              if (response.data.code === 200) {
                {% set cards = cards|slice(1, cards|length) %}
                  tata.success('Carte', response.data.message, {
                      position: 'tm'
                  });
              } else {
                  tata.error('Carte', 'La carte est bien passé', {
                      position: 'tm'
                  });
              }
              card.classList.add("d-none");
              values.shift();
              if (values.length === 0) {
                  document.getElementsByClassName('end-round')[0].classList.remove('d-none');
              }
              document.getElementsByClassName(values[0])[0].classList.remove('d-none');
          }).catch(function (error) {
              if (error.response.status === 403) {
                  tata.error('Problème', error.response.data.message, {
                      position: 'tm'
                  });
              } else {
                  tata.error('Problème', 'Une erreur c\'est produit', {
                      position: 'tm'
                  });
              }
          })
      }

      function errorCard(event) {
          event.preventDefault();
          let id = this.dataset.id;
          let url = this.href;
          let card = this.parentElement.parentElement;
          axios.get(url).then(function (response) {
              if (response.data.code === 200) {
                {% set cards = cards|slice(1, cards|length) %}
                {% set cards = cards|merge([cards]|first) %}
                  tata.error('Carte', response.data.message, {
                      position: 'tm'
                  });
              } else {
                  tata.error('Carte', 'La carte est bien passé', {
                      position: 'tm'
                  });
              }
              card.classList.add("d-none");
              values.shift()
              values.push(id)
              document.getElementsByClassName(values[0])[0].classList.remove('d-none');
              document.querySelectorAll('.is-flipped').forEach((element) => {
                  element.classList.remove('is-flipped')
              });
          }).catch(function (error) {
              if (error.response.status === 403) {
                  tata.error('Problème', error.response.data.message, {
                      position: 'tm'
                  });
              } else {
                  tata.error('Problème', 'Une erreur c\'est produit', {
                      position: 'tm'
                  });
              }
          })
      }

      document.querySelectorAll('a.btn-success').forEach(function (link) {
          link.addEventListener('click', successCard);
      })
      document.querySelectorAll('a.btn-danger').forEach(function (link) {
          link.addEventListener('click', errorCard);
      })

  </script>
{% endblock %}